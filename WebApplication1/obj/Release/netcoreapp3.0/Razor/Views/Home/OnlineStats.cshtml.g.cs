#pragma checksum "C:\Users\joao2\OneDrive\Ambiente de Trabalho\Web\infoSys\WebApplication1\Views\Home\OnlineStats.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5562af3cbcc2b0f0c405eb2e9b01420d85f3b13f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_OnlineStats), @"mvc.1.0.view", @"/Views/Home/OnlineStats.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "C:\Users\joao2\OneDrive\Ambiente de Trabalho\Web\infoSys\WebApplication1\Views\_ViewImports.cshtml"
using infoSys;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\joao2\OneDrive\Ambiente de Trabalho\Web\infoSys\WebApplication1\Views\_ViewImports.cshtml"
using infoSys.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5562af3cbcc2b0f0c405eb2e9b01420d85f3b13f", @"/Views/Home/OnlineStats.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b287a0ce41c74eac714e19b3176d8ab5c2d19d0a", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_OnlineStats : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\joao2\OneDrive\Ambiente de Trabalho\Web\infoSys\WebApplication1\Views\Home\OnlineStats.cshtml"
  
    ViewData["Title"] = "OnlineStats";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>OnlineStats</h1>

<!-- Styles -->
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

<!-- Resources -->
<script src=""https://www.amcharts.com/lib/4/core.js""></script>
<script src=""https://www.amcharts.com/lib/4/charts.js""></script>
<script src=""https://www.amcharts.com/lib/4/themes/moonrisekingdom.js""></script>
<script src=""https://www.amcharts.com/lib/4/themes/animated.js""></script>

<!-- Chart code -->
<script>
am4core.ready(function() {

// Themes begin
am4core.useTheme(am4themes_moonrisekingdom);
am4core.useTheme(am4themes_animated);
// Themes end

var chart = am4core.create(""chartdiv"", am4charts.XYChart);
chart.hiddenState.properties.opacity = 0;

chart.padding(0, 0, 0, 0);

    chart.zoomOutButton.disabled = false;
  

var data = [];
var visits = 10;
var i = 0;

for (i = 0; i <= 30; i++) {
    visits -= Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);
    data.push({ date: new Date().setSeconds(i - 30), value: ");
            WriteLiteral(@"visits });
}

chart.data = data;

var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
dateAxis.renderer.grid.template.location = 0;
dateAxis.renderer.minGridDistance = 30;
dateAxis.dateFormats.setKey(""second"", ""ss"");
dateAxis.periodChangeDateFormats.setKey(""second"", ""[bold]h:mm a"");
dateAxis.periodChangeDateFormats.setKey(""minute"", ""[bold]h:mm a"");
dateAxis.periodChangeDateFormats.setKey(""hour"", ""[bold]h:mm a"");
dateAxis.renderer.inside = true;
dateAxis.renderer.axisFills.template.disabled = true;
dateAxis.renderer.ticks.template.disabled = true;

var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
valueAxis.tooltip.disabled = true;
valueAxis.interpolationDuration = 500;
valueAxis.rangeChangeDuration = 500;
valueAxis.renderer.inside = true;
valueAxis.renderer.minLabelPosition = 0.05;
valueAxis.renderer.maxLabelPosition = 0.95;
valueAxis.renderer.axisFills.template.disabled = true;
valueAxis.renderer.ticks.template.disabled = true;

var series = chart.series.push(new a");
            WriteLiteral(@"m4charts.LineSeries());
series.dataFields.dateX = ""date"";
series.dataFields.valueY = ""value"";
series.interpolationDuration = 500;
series.defaultState.transitionDuration = 0;
series.tensionX = 0.8;

chart.events.on(""datavalidated"", function () {
    dateAxis.zoom({ start: 1 / 15, end: 1.2 }, false, true);
});

dateAxis.interpolationDuration = 500;
dateAxis.rangeChangeDuration = 500;

document.addEventListener(""visibilitychange"", function() {
    if (document.hidden) {
        if (interval) {
            clearInterval(interval);
        }
    }
    else {
        startInterval();
    }
}, false);

// add data
var interval;
function startInterval() {
    interval = setInterval(function() {
        visits = 1;
          // visits + Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5);
        var lastdataItem = series.dataItems.getIndex(series.dataItems.length - 1);
        chart.addData(
            { date: new Date(lastdataItem.dateX.getTime() + 1000), value: visits },");
            WriteLiteral(@"
            1
        );
    }, 1000);
}

startInterval();

// all the below is optional, makes some fancy effects
// gradient fill of the series
series.fillOpacity = 1;
var gradient = new am4core.LinearGradient();
gradient.addColor(chart.colors.getIndex(0), 0.2);
gradient.addColor(chart.colors.getIndex(0), 0);
series.fill = gradient;

// this makes date axis labels to fade out
dateAxis.renderer.labels.template.adapter.add(""fillOpacity"", function (fillOpacity, target) {
    var dataItem = target.dataItem;
    return dataItem.position;
})

// need to set this, otherwise fillOpacity is not changed and not set
dateAxis.events.on(""validated"", function () {
    am4core.iter.each(dateAxis.renderer.labels.iterator(), function (label) {
        label.fillOpacity = label.fillOpacity;
    })
})

// this makes date axis labels which are at equal minutes to be rotated
dateAxis.renderer.labels.template.adapter.add(""rotation"", function (rotation, target) {
    var dataItem = target.dataItem;");
            WriteLiteral(@"
    if (dataItem.date && dataItem.date.getTime() == am4core.time.round(new Date(dataItem.date.getTime()), ""minute"").getTime()) {
        target.verticalCenter = ""middle"";
        target.horizontalCenter = ""left"";
        return -90;
    }
    else {
        target.verticalCenter = ""bottom"";
        target.horizontalCenter = ""middle"";
        return 0;
    }
})

// bullet at the front of the line
var bullet = series.createChild(am4charts.CircleBullet);
bullet.circle.radius = 5;
bullet.fillOpacity = 1;
bullet.fill = chart.colors.getIndex(0);
bullet.isMeasured = false;

series.events.on(""validated"", function() {
    bullet.moveTo(series.dataItems.last.point);
    bullet.validatePosition();
});

}); // end am4core.ready()
</script>

<!-- HTML -->

    <div class=""container-fluid"" id=""chartdiv""></div>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
